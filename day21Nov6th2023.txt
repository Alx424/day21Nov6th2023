// -------- QUESTION 1 -----------
// Given a string with words separated by whitespace and a particular word, return the number of times that word appears in the string. If a word is a substring of another word in the full string, it doesn't count.
// Example: str="bob played connect-4 with his younger brother bobby and his other friend named bob", word="bob" -> Return 2
// Example: str="This is another example. Do you understand this example or do you need another example?", word="example" -> Return 3
static int getWordCount(String str, String word)...

// -------- QUESTION 2 -----------
// Given a string with words separated by whitespace and a list of words, return a list containing the number of times each corresponding word appears in the string. 
//  Again, if a word is a substring of another word in the full string, it doesn't count.
// Example: str="bob played connect-4 with his younger brother bobby and his other friend named bob", words={"bob", "played", "connect" -> Return {2, 1, 1}
// Example: str="This is another example. Do you understand this example or do you need another example?", words={"example", you} -> Return {3, 2}
static List<Integer> getWordCounts(String str, List<String> words)...

// -------- QUESTION 3 -----------
// Given the absolute path or relative path of a file, print the contents of the file.
static void dumpFileContents(String filePath)...

// -------- QUESTION 4 -----------
// Write a Java program that prints out the arguments passed to it.
// Example: Run "java myProgram firstArg secondArg" in the command line. This should print out "firstArg" and "secondArg".

// -------- QUESTION 5 -----------
Create a Java program that takes at least two strings as arguments. The first argument is the absolute or relative path of a file. The rest of the arguments are words. For each word passed to the program, print out the 
number of times it appears in the file.